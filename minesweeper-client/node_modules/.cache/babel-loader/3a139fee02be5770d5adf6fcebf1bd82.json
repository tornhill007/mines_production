{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createMines}from\"../../utils/createMines\";import classes from\"../../components/Game/Game.module.css\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faBomb}from\"@fortawesome/free-solid-svg-icons\";import React from\"react\";import{authAPI,gameApi}from\"../../api/api\";import{reset}from\"redux-form\";import{setAuthUserData}from\"./authReducer\";var SET_GAME_INFO='SET_GAME_INFO';var SET_TABLE='SET_TABLE';var CHECK_CELL='CHECK_CELL';var FIND_MINE='FIND_MINE';var SET_GAME='SET_GAME';var SET_GAMES_LIST='SET_GAMES_LIST';var SET_USERS_IN_ROOM='SET_USERS_IN_ROOM';var SET_USERS_LIST_READINESS='SET_USERS_LIST_READINESS';var SET_GAME_OVER='SET_GAME_OVER';var SET_WIN='SET_WIN';var SET_INFORMATION_GAME='SET_INFORMATION_GAME';var SET_SURRENDERED='SET_SURRENDERED';var SET_LIST_VIEWERS='SET_LIST_VIEWERS';var SET_LIST_LOGS='SET_LIST_LOGS';var SET_PLAYER_STATS='SET_PLAYER_STATS';var SET_ALL_USERS_IN_ROOM='SET_ALL_USERS_IN_ROOM';var SET_IS_READY='SET_IS_READY';var initialState={gameInfo:null,tableTwoDimensional:[],isGameOver:false,gamesList:[],usersInRoom:{},usersInGame:[],usersReadiness:[],gameOwner:{},win:false,informationGame:false,surrendered:false,listViewers:[],listLogs:[],playerStats:[],isReady:false};var gameReducer=function gameReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_GAME:return _objectSpread(_objectSpread({},state),{},{tableTwoDimensional:action.game});case SET_ALL_USERS_IN_ROOM:return _objectSpread(_objectSpread({},state),{},{usersInRoom:action.usersInRooms});case SET_IS_READY:return _objectSpread(_objectSpread({},state),{},{isReady:action.data.isReady});case SET_SURRENDERED:return _objectSpread(_objectSpread({},state),{},{surrendered:action.surrendered});case SET_LIST_VIEWERS:return _objectSpread(_objectSpread({},state),{},{listViewers:action.listViewers});case SET_LIST_LOGS:return _objectSpread(_objectSpread({},state),{},{listLogs:action.listLogs});case SET_USERS_LIST_READINESS:var arrListReadiness=[];var arrTabs=Object.keys(action.data.listReadiness);arrTabs.forEach(function(item){var obj=_objectSpread({},action.data.listReadiness[item]);console.log(\"obj\",obj);obj.tabid=item;arrListReadiness.push(obj);});console.log(\"gameOwner\",action.data.gameOwner);return _objectSpread(_objectSpread({},state),{},{usersReadiness:arrListReadiness,gameOwner:action.data.gameOwner});case SET_GAMES_LIST:return _objectSpread(_objectSpread({},state),{},{gamesList:action.gamesList});case SET_INFORMATION_GAME:return _objectSpread(_objectSpread({},state),{},{informationGame:action.gameInfo});case SET_GAME_OVER:return _objectSpread(_objectSpread({},state),{},{isGameOver:action.data.blownUp});case SET_PLAYER_STATS:return _objectSpread(_objectSpread({},state),{},{playerStats:action.playerStats});case SET_WIN:return _objectSpread(_objectSpread({},state),{},{win:action.data.win});case SET_USERS_IN_ROOM:var usersInRoom=JSON.parse(JSON.stringify(state.usersInRoom));console.log(\"action.data1\",action.data);if(action.data.usersUniq.length==0){return _objectSpread({},state);}usersInRoom[action.data.gameid]=action.data.usersUniq.length;console.log(\"usersInRoom_REDUCER\",usersInRoom);return _objectSpread(_objectSpread({},state),{},{usersInRoom:usersInRoom});case SET_GAME_INFO:return _objectSpread(_objectSpread({},state),{},{gameInfo:action.gameInfo});case CHECK_CELL:// push the first empty cell/point\n// LOOP until queue non empty\n// pop.head cell and reveal it\n// push the empty surrounding cells of it (8 at maximum)\n// (you must flag the cells so you don't push them again,\n// ie dont push the cells that are already revealed)\n//\nvar arr=[];var clonedTableTwoDimensional=JSON.parse(JSON.stringify(state.tableTwoDimensional));if(clonedTableTwoDimensional[action.i][action.j].isMine){return _objectSpread({},state);}if(clonedTableTwoDimensional[action.i][action.j].amountOfMines!==0){clonedTableTwoDimensional[action.i][action.j].isOpen=true;return _objectSpread(_objectSpread({},state),{},{tableTwoDimensional:clonedTableTwoDimensional});}arr.push(clonedTableTwoDimensional[action.i][action.j]);while(arr.length>0){var element=arr.shift();console.log(\"ELEMENT\",element);console.log(\"clonedTableTwoDimensional\",clonedTableTwoDimensional);clonedTableTwoDimensional[element.i][element.j].isOpen=true;for(var i=0;i<3;i++){for(var j=0;j<3;j++){if(clonedTableTwoDimensional[element.i-1+i]&&clonedTableTwoDimensional[element.i-1+i][element.j-1+j]){if(clonedTableTwoDimensional[element.i-1+i][element.j-1+j].amountOfMines===0&&clonedTableTwoDimensional[element.i-1+i][element.j-1+j].isOpen===false){arr.push(clonedTableTwoDimensional[element.i-1+i][element.j-1+j]);}clonedTableTwoDimensional[element.i-1+i][element.j-1+j].isOpen=true;}}}}return _objectSpread(_objectSpread({},state),{},{tableTwoDimensional:clonedTableTwoDimensional});case FIND_MINE:var clonedTable=JSON.parse(JSON.stringify(state.tableTwoDimensional));clonedTable[action.i][action.j].isOpen=true;if(clonedTable[action.i][action.j].isMine){clonedTable[action.i][action.j].isBlownUp=true;}// clonedTable[action.i][action.j].isMine\nreturn _objectSpread(_objectSpread({},state),{},{tableTwoDimensional:clonedTable,isGameOver:clonedTable[action.i][action.j].isMine});case SET_TABLE:var firstPoint=1;var sizeOfField=state.gameInfo.fieldSize.split('x');var coordinatesForMines=createMines(state.gameInfo.minesAmount,+sizeOfField[1],+sizeOfField[0]);var lastPoint=+sizeOfField[0];var tableTwoDimensional=[];for(var _i=1;_i<=sizeOfField[1];_i++){var data=[];for(var _j=firstPoint;_j<=lastPoint;_j++){data.push({isMine:false,isOpen:false,isChecked:false});}firstPoint+=+sizeOfField[0];lastPoint+=+sizeOfField[0];tableTwoDimensional.push(data);}coordinatesForMines.forEach(function(item){tableTwoDimensional[item.firstCoordinate][item.lastCoordinate].isMine=true;});for(var _i2=0;_i2<tableTwoDimensional.length;_i2++){for(var _j2=0;_j2<tableTwoDimensional[_i2].length;_j2++){tableTwoDimensional[_i2][_j2].i=_i2;tableTwoDimensional[_i2][_j2].j=_j2;var amountMines=0;if(!tableTwoDimensional[_i2][_j2].isMine){tableTwoDimensional[_i2][_j2-1]&&tableTwoDimensional[_i2][_j2-1].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2][_j2+1]&&tableTwoDimensional[_i2][_j2+1].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2-1]&&tableTwoDimensional[_i2-1][_j2].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2+1]&&tableTwoDimensional[_i2+1][_j2].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2+1]&&tableTwoDimensional[_i2+1][_j2-1]&&tableTwoDimensional[_i2+1][_j2-1].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2+1]&&tableTwoDimensional[_i2+1][_j2+1]&&tableTwoDimensional[_i2+1][_j2+1].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2-1]&&tableTwoDimensional[_i2-1][_j2+1]&&tableTwoDimensional[_i2-1][_j2+1].isMine?amountMines+=1:amountMines+=0;tableTwoDimensional[_i2-1]&&tableTwoDimensional[_i2-1][_j2-1]&&tableTwoDimensional[_i2-1][_j2-1].isMine?amountMines+=1:amountMines+=0;}tableTwoDimensional[_i2][_j2].amountOfMines=amountMines;}}return _objectSpread(_objectSpread({},state),{},{tableTwoDimensional:tableTwoDimensional});default:return state;}};export var setGame=function setGame(_ref){var game=_ref.game,_ref$isMine=_ref.isMine,isMine=_ref$isMine===void 0?undefined:_ref$isMine;return{type:SET_GAME,game:game,isMine:isMine};};export var setUsersInRoom=function setUsersInRoom(data){return{type:SET_USERS_IN_ROOM,data:data};};export var setUsersListReadiness=function setUsersListReadiness(data){return{type:SET_USERS_LIST_READINESS,data:data};};export var setGameOver=function setGameOver(data){return{type:SET_GAME_OVER,data:data};};export var setWin=function setWin(data){return{type:SET_WIN,data:data};};export var setListViewers=function setListViewers(listViewers){return{type:SET_LIST_VIEWERS,listViewers:listViewers};};export var setListLogs=function setListLogs(listLogs){return{type:SET_LIST_LOGS,listLogs:listLogs};};export var setPlayerStats=function setPlayerStats(playerStats){return{type:SET_PLAYER_STATS,playerStats:playerStats};};export var setListUsersInRoom=function setListUsersInRoom(usersInRooms){return{type:SET_ALL_USERS_IN_ROOM,usersInRooms:usersInRooms};};export var setIsReady=function setIsReady(data){return{type:SET_IS_READY,data:data};};export var setGamesList=function setGamesList(gamesList){return{type:SET_GAMES_LIST,gamesList:gamesList};};export var setGameInfo=function setGameInfo(gameInfo){return{type:SET_GAME_INFO,gameInfo:gameInfo};};export var setTable=function setTable(){return{type:SET_TABLE};};export var setInformationGame=function setInformationGame(gameInfo){return{type:SET_INFORMATION_GAME,gameInfo:gameInfo};};export var checkCell=function checkCell(i,j){return{type:CHECK_CELL,i:i,j:j};};export var findMine=function findMine(i,j){return{type:FIND_MINE,i:i,j:j};};export var setSurrendered=function setSurrendered(surrendered){return{type:SET_SURRENDERED,surrendered:surrendered};};export var setGameInfoAndSetTable=function setGameInfoAndSetTable(gameInfo){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setGameInfo(gameInfo));dispatch(setTable());case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var getInfoGame=function getInfoGame(gameId){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return gameApi.getInformationGame(gameId);case 3:response=_context2.sent;console.log(\"responseresponse\",response);if(response.statusText==='OK'){dispatch(setInformationGame(response.data));}else{message=response.data.messages.length>0?response.data.messages[0]:\"Some error\";}_context2.next=12;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);alert(_context2.t0.response.data.message);console.log(\"err\",_context2.t0.response.data.message);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};export default gameReducer;","map":{"version":3,"sources":["/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/src/redux/reducers/gameReducer.js"],"names":["createMines","classes","FontAwesomeIcon","faBomb","React","authAPI","gameApi","reset","setAuthUserData","SET_GAME_INFO","SET_TABLE","CHECK_CELL","FIND_MINE","SET_GAME","SET_GAMES_LIST","SET_USERS_IN_ROOM","SET_USERS_LIST_READINESS","SET_GAME_OVER","SET_WIN","SET_INFORMATION_GAME","SET_SURRENDERED","SET_LIST_VIEWERS","SET_LIST_LOGS","SET_PLAYER_STATS","SET_ALL_USERS_IN_ROOM","SET_IS_READY","initialState","gameInfo","tableTwoDimensional","isGameOver","gamesList","usersInRoom","usersInGame","usersReadiness","gameOwner","win","informationGame","surrendered","listViewers","listLogs","playerStats","isReady","gameReducer","state","action","type","game","usersInRooms","data","arrListReadiness","arrTabs","Object","keys","listReadiness","forEach","item","obj","console","log","tabid","push","blownUp","JSON","parse","stringify","usersUniq","length","gameid","arr","clonedTableTwoDimensional","i","j","isMine","amountOfMines","isOpen","element","shift","clonedTable","isBlownUp","firstPoint","sizeOfField","fieldSize","split","coordinatesForMines","minesAmount","lastPoint","isChecked","firstCoordinate","lastCoordinate","amountMines","setGame","undefined","setUsersInRoom","setUsersListReadiness","setGameOver","setWin","setListViewers","setListLogs","setPlayerStats","setListUsersInRoom","setIsReady","setGamesList","setGameInfo","setTable","setInformationGame","checkCell","findMine","setSurrendered","setGameInfoAndSetTable","dispatch","getInfoGame","gameId","getInformationGame","response","statusText","message","messages","alert"],"mappings":"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","sourcesContent":["import {createMines} from \"../../utils/createMines\";\nimport classes from \"../../components/Game/Game.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBomb} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport {authAPI, gameApi} from \"../../api/api\";\nimport {reset} from \"redux-form\";\nimport {setAuthUserData} from \"./authReducer\";\n\nconst SET_GAME_INFO = 'SET_GAME_INFO';\nconst SET_TABLE = 'SET_TABLE';\nconst CHECK_CELL = 'CHECK_CELL';\nconst FIND_MINE = 'FIND_MINE';\nconst SET_GAME = 'SET_GAME';\nconst SET_GAMES_LIST = 'SET_GAMES_LIST';\nconst SET_USERS_IN_ROOM = 'SET_USERS_IN_ROOM';\nconst SET_USERS_LIST_READINESS = 'SET_USERS_LIST_READINESS';\nconst SET_GAME_OVER = 'SET_GAME_OVER';\nconst SET_WIN = 'SET_WIN';\nconst SET_INFORMATION_GAME = 'SET_INFORMATION_GAME';\nconst SET_SURRENDERED = 'SET_SURRENDERED';\nconst SET_LIST_VIEWERS = 'SET_LIST_VIEWERS';\nconst SET_LIST_LOGS = 'SET_LIST_LOGS';\nconst SET_PLAYER_STATS = 'SET_PLAYER_STATS';\nconst SET_ALL_USERS_IN_ROOM = 'SET_ALL_USERS_IN_ROOM';\nconst SET_IS_READY = 'SET_IS_READY';\n\n\nlet initialState = {\n  gameInfo: null,\n  tableTwoDimensional: [],\n  isGameOver: false,\n  gamesList: [],\n  usersInRoom: {},\n  usersInGame: [],\n  usersReadiness: [],\n  gameOwner: {},\n  win: false,\n  informationGame: false,\n  surrendered: false,\n  listViewers: [],\n  listLogs: [],\n  playerStats: [],\n  isReady: false\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GAME:\n      return {\n        ...state,\n        tableTwoDimensional: action.game,\n      };\n    case SET_ALL_USERS_IN_ROOM:\n      return {\n        ...state,\n        usersInRoom: action.usersInRooms,\n      };\n      case SET_IS_READY:\n      return {\n        ...state,\n        isReady: action.data.isReady,\n      };\n    case SET_SURRENDERED:\n      return {\n        ...state,\n        surrendered: action.surrendered,\n      };\n    case SET_LIST_VIEWERS:\n      return {\n        ...state,\n        listViewers: action.listViewers,\n      };\n    case SET_LIST_LOGS:\n      return {\n        ...state,\n        listLogs: action.listLogs,\n      };\n    case SET_USERS_LIST_READINESS:\n      let arrListReadiness = [];\n      let arrTabs = Object.keys(action.data.listReadiness);\n      arrTabs.forEach(item => {\n        let obj = {...action.data.listReadiness[item]};\n        console.log(\"obj\", obj)\n        obj.tabid = item;\n        arrListReadiness.push(obj);\n      })\n      console.log(\"gameOwner\", action.data.gameOwner)\n      return {\n        ...state,\n        usersReadiness: arrListReadiness,\n        gameOwner: action.data.gameOwner\n      };\n    case SET_GAMES_LIST:\n      return {\n        ...state,\n        gamesList: action.gamesList,\n      };\n    case SET_INFORMATION_GAME:\n      return {\n        ...state,\n        informationGame: action.gameInfo,\n      };\n    case SET_GAME_OVER:\n      return {\n        ...state,\n        isGameOver: action.data.blownUp,\n      };\n    case SET_PLAYER_STATS:\n\n      return {\n        ...state,\n        playerStats: action.playerStats,\n      };\n    case SET_WIN:\n      return {\n        ...state,\n        win: action.data.win,\n      };\n    case SET_USERS_IN_ROOM:\n      let usersInRoom = JSON.parse(JSON.stringify(state.usersInRoom));\n      console.log(\"action.data1\", action.data);\n      if(action.data.usersUniq.length == 0) {\n        return {\n          ...state\n        }\n      }\n      usersInRoom[action.data.gameid] = action.data.usersUniq.length;\n      console.log(\"usersInRoom_REDUCER\", usersInRoom)\n      return {\n        ...state,\n        usersInRoom: usersInRoom,\n      };\n    case SET_GAME_INFO:\n      return {\n        ...state,\n        gameInfo: action.gameInfo,\n      };\n    case CHECK_CELL:\n\n      // push the first empty cell/point\n      // LOOP until queue non empty\n      // pop.head cell and reveal it\n      // push the empty surrounding cells of it (8 at maximum)\n      // (you must flag the cells so you don't push them again,\n      // ie dont push the cells that are already revealed)\n      //\n\n      let arr = [];\n      let clonedTableTwoDimensional = JSON.parse(JSON.stringify(state.tableTwoDimensional));\n      if (clonedTableTwoDimensional[action.i][action.j].isMine) {\n        return {\n          ...state\n        }\n      }\n      if (clonedTableTwoDimensional[action.i][action.j].amountOfMines !== 0) {\n        clonedTableTwoDimensional[action.i][action.j].isOpen = true;\n        return {\n          ...state,\n          tableTwoDimensional: clonedTableTwoDimensional,\n        };\n      }\n      arr.push(clonedTableTwoDimensional[action.i][action.j])\n      while (arr.length > 0) {\n\n        let element = arr.shift();\n        console.log(\"ELEMENT\", element)\n        console.log(\"clonedTableTwoDimensional\", clonedTableTwoDimensional)\n        clonedTableTwoDimensional[element.i][element.j].isOpen = true;\n\n        for (let i = 0; i < 3; i++) {\n          for (let j = 0; j < 3; j++) {\n            if (clonedTableTwoDimensional[element.i - 1 + i] && clonedTableTwoDimensional[element.i - 1 + i][element.j - 1 + j]) {\n              if (clonedTableTwoDimensional[element.i - 1 + i][element.j - 1 + j].amountOfMines === 0 && clonedTableTwoDimensional[element.i - 1 + i][element.j - 1 + j].isOpen === false) {\n                arr.push(clonedTableTwoDimensional[element.i - 1 + i][element.j - 1 + j])\n              }\n              clonedTableTwoDimensional[element.i - 1 + i][element.j - 1 + j].isOpen = true\n            }\n\n          }\n        }\n      }\n\n      return {\n        ...state,\n        tableTwoDimensional: clonedTableTwoDimensional,\n      };\n    case FIND_MINE:\n      let clonedTable = JSON.parse(JSON.stringify(state.tableTwoDimensional));\n      clonedTable[action.i][action.j].isOpen = true;\n      if (clonedTable[action.i][action.j].isMine) {\n        clonedTable[action.i][action.j].isBlownUp = true;\n      }\n      // clonedTable[action.i][action.j].isMine\n      return {\n        ...state,\n        tableTwoDimensional: clonedTable,\n        isGameOver: clonedTable[action.i][action.j].isMine,\n      };\n\n    case SET_TABLE:\n\n      let firstPoint = 1;\n      let sizeOfField = state.gameInfo.fieldSize.split('x');\n      let coordinatesForMines = createMines(state.gameInfo.minesAmount, +sizeOfField[1], +sizeOfField[0]);\n\n      let lastPoint = +sizeOfField[0];\n      let tableTwoDimensional = [];\n      for (let i = 1; i <= sizeOfField[1]; i++) {\n        let data = []\n        for (let j = firstPoint; j <= lastPoint; j++) {\n          data.push({isMine: false, isOpen: false, isChecked: false})\n        }\n        firstPoint += +sizeOfField[0]\n        lastPoint += +sizeOfField[0]\n        tableTwoDimensional.push(data)\n      }\n\n      coordinatesForMines.forEach(item => {\n        tableTwoDimensional[item.firstCoordinate][item.lastCoordinate].isMine = true;\n      })\n\n      for (let i = 0; i < tableTwoDimensional.length; i++) {\n        for (let j = 0; j < tableTwoDimensional[i].length; j++) {\n          tableTwoDimensional[i][j].i = i;\n          tableTwoDimensional[i][j].j = j;\n          let amountMines = 0;\n          if (!tableTwoDimensional[i][j].isMine) {\n            (tableTwoDimensional[i][j - 1] && tableTwoDimensional[i][j - 1].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i][j + 1] && tableTwoDimensional[i][j + 1].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i - 1] && tableTwoDimensional[i - 1][j].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i + 1] && tableTwoDimensional[i + 1][j].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i + 1] && tableTwoDimensional[i + 1][j - 1] && tableTwoDimensional[i + 1][j - 1].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i + 1] && tableTwoDimensional[i + 1][j + 1] && tableTwoDimensional[i + 1][j + 1].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i - 1] && tableTwoDimensional[i - 1][j + 1] && tableTwoDimensional[i - 1][j + 1].isMine) ? amountMines += 1 : amountMines += 0;\n            (tableTwoDimensional[i - 1] && tableTwoDimensional[i - 1][j - 1] && tableTwoDimensional[i - 1][j - 1].isMine) ? amountMines += 1 : amountMines += 0;\n          }\n          tableTwoDimensional[i][j].amountOfMines = amountMines;\n        }\n      }\n\n      return {\n        ...state,\n        tableTwoDimensional: tableTwoDimensional,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setGame = ({game, isMine = undefined}) => ({type: SET_GAME, game, isMine});\nexport const setUsersInRoom = (data) => ({type: SET_USERS_IN_ROOM, data});\nexport const setUsersListReadiness = (data) => ({type: SET_USERS_LIST_READINESS, data});\nexport const setGameOver = (data) => ({type: SET_GAME_OVER, data});\nexport const setWin = (data) => ({type: SET_WIN, data});\nexport const setListViewers = (listViewers) => ({type: SET_LIST_VIEWERS, listViewers});\nexport const setListLogs = (listLogs) => ({type: SET_LIST_LOGS, listLogs});\nexport const setPlayerStats = (playerStats) => ({type: SET_PLAYER_STATS, playerStats});\nexport const setListUsersInRoom = (usersInRooms) => ({type: SET_ALL_USERS_IN_ROOM, usersInRooms});\nexport const setIsReady = (data) => ({type: SET_IS_READY, data});\n\nexport const setGamesList = (gamesList) => ({type: SET_GAMES_LIST, gamesList});\n\nexport const setGameInfo = (gameInfo) => ({type: SET_GAME_INFO, gameInfo});\nexport const setTable = () => ({type: SET_TABLE});\nexport const setInformationGame = (gameInfo) => ({type: SET_INFORMATION_GAME, gameInfo});\nexport const checkCell = (i, j) => ({type: CHECK_CELL, i, j});\nexport const findMine = (i, j) => ({type: FIND_MINE, i, j});\nexport const setSurrendered = (surrendered) => ({type: SET_SURRENDERED, surrendered});\nexport const setGameInfoAndSetTable = (gameInfo) => async (dispatch) => {\n  dispatch(setGameInfo(gameInfo));\n  dispatch(setTable());\n};\nexport const getInfoGame = (gameId) => async (dispatch) => {\n\n  try {\n    let response = await gameApi.getInformationGame(gameId);\n    console.log(\"responseresponse\", response);\n    if (response.statusText === 'OK') {\n      dispatch(setInformationGame(response.data));\n    } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    }\n  } catch (err) {\n    alert(err.response.data.message)\n    console.log(\"err\", err.response.data.message);\n  }\n\n\n};\nexport default gameReducer;"]},"metadata":{},"sourceType":"module"}