{"ast":null,"code":"import*as axios from\"axios\";import{baseUrl}from'../common/config/config';var instance=axios.create({baseURL:baseUrl});// const headers = {\"Content-Type\": \"multipart/form-data\"}\ninstance.interceptors.request.use(function(config){var token=JSON.parse(localStorage.getItem('user'))?JSON.parse(localStorage.getItem('user')).token:'';if(token){config.headers.Authorization=token;}else{delete instance.defaults.headers.common.Authorization;}return config;},function(error){return Promise.reject(error);});export var historyApi={getRoomHistory:function getRoomHistory(roomId){return instance.get(\"history/\".concat(roomId));}};export var gameApi={getInformationGame:function getInformationGame(gameId){return instance.get(\"game/\".concat(gameId));}};export var authAPI={login:function login(password,userName){return axios.post(\"\".concat(baseUrl,\"login\"),{password:password,userName:userName});},register:function register(password,userName){console.log(password,userName);return axios.post(\"\".concat(baseUrl,\"users\"),{password:password,userName:userName});}};","map":{"version":3,"sources":["/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/src/api/api.js"],"names":["axios","baseUrl","instance","create","baseURL","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","defaults","common","error","Promise","reject","historyApi","getRoomHistory","roomId","get","gameApi","getInformationGame","gameId","authAPI","login","password","userName","post","register","console","log"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,OAAR,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAa,CAC1BC,OAAO,CAAEH,OADiB,CAAb,CAAjB,CAIA;AAEAC,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,SAAAC,MAAM,CAAI,CACN,GAAMC,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAA2CH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCJ,KAApF,CAA4F,EAA1G,CAEA,GAAIA,KAAJ,CAAW,CACPD,MAAM,CAACM,OAAP,CAAeC,aAAf,CAA+BN,KAA/B,CACH,CAFD,IAEO,CACH,MAAOP,CAAAA,QAAQ,CAACc,QAAT,CAAkBF,OAAlB,CAA0BG,MAA1B,CAAiCF,aAAxC,CACH,CACD,MAAOP,CAAAA,MAAP,CACH,CAVL,CAYI,SAAAU,KAAK,QAAIC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAJ,EAZT,EAeA,MAAO,IAAMG,CAAAA,UAAU,CAAG,CACtBC,cADsB,yBACPC,MADO,CACC,CACnB,MAAOrB,CAAAA,QAAQ,CAACsB,GAAT,mBAAwBD,MAAxB,EAAP,CACH,CAHqB,CAAnB,CAMP,MAAO,IAAME,CAAAA,OAAO,CAAG,CACrBC,kBADqB,6BACFC,MADE,CACM,CACzB,MAAOzB,CAAAA,QAAQ,CAACsB,GAAT,gBAAqBG,MAArB,EAAP,CACD,CAHoB,CAAhB,CAMP,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACnBC,KADmB,gBACbC,QADa,CACHC,QADG,CACO,CACtB,MAAO/B,CAAAA,KAAK,CAACgC,IAAN,WAAc/B,OAAd,UAA8B,CACjC6B,QAAQ,CAARA,QADiC,CAEjCC,QAAQ,CAARA,QAFiC,CAA9B,CAAP,CAIH,CANkB,CAQnBE,QARmB,mBAQVH,QARU,CAQAC,QARA,CAQU,CACzBG,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAAsBC,QAAtB,EACA,MAAO/B,CAAAA,KAAK,CAACgC,IAAN,WAAc/B,OAAd,UAA8B,CACjC6B,QAAQ,CAARA,QADiC,CAEjCC,QAAQ,CAARA,QAFiC,CAA9B,CAAP,CAIH,CAdkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\nimport {baseUrl} from '../common/config/config';\n\nconst instance = axios.create({\n    baseURL: baseUrl,\n})\n\n// const headers = {\"Content-Type\": \"multipart/form-data\"}\n\ninstance.interceptors.request.use(\n    config => {\n        const token = JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')).token : '';\n\n        if (token) {\n            config.headers.Authorization = token;\n        } else {\n            delete instance.defaults.headers.common.Authorization;\n        }\n        return config;\n    },\n\n    error => Promise.reject(error)\n);\n\nexport const historyApi = {\n    getRoomHistory(roomId) {\n        return instance.get(`history/${roomId}`,)\n    },\n};\n\nexport const gameApi = {\n  getInformationGame(gameId) {\n    return instance.get(`game/${gameId}`,)\n  },\n};\n\nexport const authAPI = {\n    login(password, userName) {\n        return axios.post(`${baseUrl}login`, {\n            password,\n            userName\n        })\n    },\n\n    register(password, userName) {\n        console.log(password, userName)\n        return axios.post(`${baseUrl}users`, {\n            password,\n            userName\n        })\n    },\n};"]},"metadata":{},"sourceType":"module"}