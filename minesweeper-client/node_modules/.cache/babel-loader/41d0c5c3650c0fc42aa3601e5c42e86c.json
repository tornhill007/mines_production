{"ast":null,"code":"import _classCallCheck from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{withRouter}from'react-router-dom';import classes from'./Game.module.css';import{createMines}from\"../../utils/createMines\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faBomb}from\"@fortawesome/free-solid-svg-icons\";import{checkCell,findMine,getInfoGame}from\"../../redux/reducers/gameReducer\";import colorsArray from\"../../common/colorsArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(props){var _this;_classCallCheck(this,Game);_this=_super.call(this,props);_this.onReady=function(){_this.props.socket.emit(\"game/readiness\",{isReady:true,gameId:_this.props.match.params.gameId},function(data){console.log(['data'],data);});_this.setState({isReady:true});};_this.onNotReady=function(){_this.props.socket.emit(\"game/readiness\",{isReady:false,gameId:_this.props.match.params.gameId},function(data){console.log(['data'],data);});_this.setState({isReady:false});};_this.startGame=function(){_this.props.socket.emit(\"game/start\",{gameId:_this.props.match.params.gameId});_this.props.getInfoGame(_this.props.match.params.gameId);};_this.onSurrender=function(){_this.props.socket.emit(\"game/surrender\",{gameId:_this.props.match.params.gameId});// this.props.getInfoGame(this.props.match.params.gameId);\n};_this.onShowHistory=function(action){_this.props.socket.emit(\"game/showHistory\",{action:action});// this.props.getInfoGame(this.props.match.params.gameId);\n};_this.onExitFromGame=function(){_this.props.socket.emit(\"game/exit\");_this.props.history.push(\"/\");};_this.state={isGaming:true,isRender:false,isReady:false};return _this;}_createClass(Game,[{key:\"render\",value:function render(){var _this2=this;console.log(\"listLogs\",this.props.listLogs);console.log(\"tableTwoDimensionalOPENED1\",this.props);console.log(\"tableTwoDimensionalOPENED\",this.props.tableTwoDimensional);console.log(\"background\",classes[\"background\"+colorsArray[3%10]]);var isGameOver=this.props.isGameOver;var sendAction=function sendAction(i,j){// this.props.checkCell(i, j)\n_this2.props.socket.emit(\"game/action\",{i:i,j:j},function(data){console.log(['data'],data);});};var checkCell=function checkCell(i,j){_this2.props.checkCell(i,j);};var findMine=function findMine(i,j){_this2.props.findMine(i,j);};var rows=this.props.tableTwoDimensional&&this.props.tableTwoDimensional.map(function(item,i){var entry=item.map(function(element,j){return/*#__PURE__*/ (// <td onClick={() => {checkCell(i, j); findMine(i, j)}} className={classes.itemCell} key={j}> {element.isMine ? <FontAwesomeIcon icon={faBomb} /> : (element.isOpen && element.amountOfMines === 0) ? '' : element.amountOfMines} </td>\n// <td onClick={() => {checkCell(i, j); findMine(i, j)}} className={`${element.isBlownUp && classes.blownUpBackground} ${element.isOpen && !element.isMine && element.amountOfMines === 0 && classes.emptyOpened} ${classes.itemCell}`} key={j}> {element.isMine && isGameOver ? <FontAwesomeIcon icon={faBomb} /> : (element.isOpen && !element.isMine && element.amountOfMines > 0 && element.amountOfMines) } </td>\n_jsxs(\"td\",{onClick:function onClick(){sendAction(i,j);},className:\" \".concat(element.isBlownUp&&classes.blownUpBackground,\" \").concat(element.isOpen&&!element.isMine&&element.amountOfMines!==0&&classes[\"background\"+colorsArray[element.userId%10]],\" \").concat(element.isOpen&&!element.isMine&&element.amountOfMines===0&&classes[\"background\"+colorsArray[element.userId%10]],\" \").concat(classes.itemCell),children:[\" \",element.isMine&&element.isBlownUp?/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faBomb}):element.isOpen&&!element.isMine&&element.amountOfMines>0&&element.amountOfMines,\" \"]},j));});return/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",entry,\" \"]},i);});console.log(\"usersReadiness\",this.props.usersReadiness);console.log(\"usersInGame\",this.props.gameOwner);console.log(\"usersInRoom\",this.props.usersInRoom);console.log(\"informationGame\",this.props.informationGame);var maxPlayers=this.props.gamesList.filter(function(item){return item.gameid===_this2.props.match.params.gameId;});console.log(\"maxPlayers\",maxPlayers);var isStarting=this.props.usersReadiness.find(function(item){return!item.isReady;});console.log(\"isStarting\",isStarting);var whoMove=this.props.usersReadiness.find(function(item){return item.movePosition;});return/*#__PURE__*/_jsxs(\"div\",{className:classes.wrapMain,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.itemBlockLeft,children:[this.props.isGameOver&&/*#__PURE__*/_jsx(\"div\",{children:\"GAME OVER\"}),this.props.win&&/*#__PURE__*/_jsx(\"div\",{children:\"YOU ARE WINNER\"}),/*#__PURE__*/_jsx(\"table\",{children:rows}),!this.props.surrendered&&this.props.informationGame.isplaying&&/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){_this2.onSurrender();},children:\"Surrender\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"list players:\",this.props.usersReadiness.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(item.isReady&&classes.activeUser,\" \").concat(item.movePosition&&classes.activeMove),children:item.username});})]}),this.props.listViewers.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[\"list viewers: \",this.props.listViewers.map(function(item){return item.username;}),\" \"]}),maxPlayers[0]&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Players: \",this.props.usersInRoom[this.props.match.params.gameId],\"/\",maxPlayers[0].maxplayers]}),this.props.informationGame.isplaying||this.props.surrendered?'':this.props.gameOwner&&this.props.gameOwner.username!==JSON.parse(localStorage.getItem('user')).userName?!this.props.isReady?/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){_this2.onReady();},children:\"Ready\"}):/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){_this2.onNotReady();},children:\"Not ready\"}):'',!this.props.informationGame.isplaying&&!isStarting?maxPlayers[0]&&maxPlayers[0].owner==JSON.parse(localStorage.getItem('user')).userId&&/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){_this2.startGame();},children:\"START GAME\"}):'',/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){_this2.onExitFromGame();},children:\"Exit from game\"})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.itemBlockRight,children:this.props.listLogs.map(function(item){return/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){_this2.onShowHistory(item.history);},className:classes.itemHistory,children:[item.username,\" i: \",item.history.i,\"; j: \",item.history.j,\" value: \",item.amountofmines]});})})]});}}]);return Game;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{gameInfo:state.gamePage.gameInfo,tableTwoDimensional:state.gamePage.tableTwoDimensional,isGameOver:state.gamePage.isGameOver,socket:state.socketPage.socket,gamesList:state.gamePage.gamesList,usersInRoom:state.gamePage.usersInRoom,usersInGame:state.gamePage.usersInGame,usersReadiness:state.gamePage.usersReadiness,gameOwner:state.gamePage.gameOwner,win:state.gamePage.win,informationGame:state.gamePage.informationGame,surrendered:state.gamePage.surrendered,listViewers:state.gamePage.listViewers,listLogs:state.gamePage.listLogs,isReady:state.gamePage.isReady};};export default withRouter(connect(mapStateToProps,{checkCell:checkCell,findMine:findMine,getInfoGame:getInfoGame})(Game));","map":{"version":3,"sources":["/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/src/components/Game/Game.jsx"],"names":["React","connect","withRouter","classes","createMines","FontAwesomeIcon","faBomb","checkCell","findMine","getInfoGame","colorsArray","Game","props","onReady","socket","emit","isReady","gameId","match","params","data","console","log","setState","onNotReady","startGame","onSurrender","onShowHistory","action","onExitFromGame","history","push","state","isGaming","isRender","listLogs","tableTwoDimensional","isGameOver","sendAction","i","j","rows","map","item","entry","element","isBlownUp","blownUpBackground","isOpen","isMine","amountOfMines","userId","itemCell","usersReadiness","gameOwner","usersInRoom","informationGame","maxPlayers","gamesList","filter","gameid","isStarting","find","whoMove","movePosition","wrapMain","itemBlockLeft","win","surrendered","isplaying","activeUser","activeMove","username","listViewers","length","maxplayers","JSON","parse","localStorage","getItem","userName","owner","itemBlockRight","itemHistory","amountofmines","Component","mapStateToProps","gameInfo","gamePage","socketPage","usersInGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport classes from './Game.module.css';\nimport {createMines} from \"../../utils/createMines\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBomb} from \"@fortawesome/free-solid-svg-icons\";\nimport {checkCell, findMine, getInfoGame} from \"../../redux/reducers/gameReducer\";\nimport colorsArray from \"../../common/colorsArray\";\n\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isGaming: true,\n      isRender: false,\n      isReady: false\n    }\n  }\n\n  onReady = () => {\n    this.props.socket.emit(\"game/readiness\", {isReady: true, gameId: this.props.match.params.gameId}, (data) => {\n      console.log(['data'], data)\n    })\n    this.setState({\n      isReady: true\n    })\n  }\n\n  onNotReady = () => {\n    this.props.socket.emit(\"game/readiness\", {isReady: false, gameId: this.props.match.params.gameId}, (data) => {\n      console.log(['data'], data)\n    })\n    this.setState({\n      isReady: false\n    })\n  }\n\n  startGame = () => {\n    this.props.socket.emit(\"game/start\", {gameId: this.props.match.params.gameId})\n    this.props.getInfoGame(this.props.match.params.gameId);\n  }\n\n  onSurrender = () => {\n    this.props.socket.emit(\"game/surrender\", {gameId: this.props.match.params.gameId})\n    // this.props.getInfoGame(this.props.match.params.gameId);\n  }\n\n  onShowHistory = (action) => {\n    this.props.socket.emit(\"game/showHistory\", {action})\n    // this.props.getInfoGame(this.props.match.params.gameId);\n  }\n\n  onExitFromGame = () => {\n    this.props.socket.emit(\"game/exit\");\n    this.props.history.push(`/`);\n  }\n\n  render() {\n    console.log(\"listLogs\", this.props.listLogs);\n    console.log(\"tableTwoDimensionalOPENED1\", this.props);\n    console.log(\"tableTwoDimensionalOPENED\", this.props.tableTwoDimensional);\n    console.log(\"background\", classes[`background` + colorsArray[3 % 10]]);\n\n    let isGameOver = this.props.isGameOver;\n\n    const sendAction = (i, j) => {\n      // this.props.checkCell(i, j)\n      this.props.socket.emit(\"game/action\", {i, j}, (data) => {\n        console.log(['data'], data)\n      })\n    }\n\n    const checkCell = (i, j) => {\n      this.props.checkCell(i, j)\n    }\n\n    const findMine = (i, j) => {\n      this.props.findMine(i, j)\n    }\n\n    let rows = this.props.tableTwoDimensional && this.props.tableTwoDimensional.map(function (item, i) {\n      let entry = item.map(function (element, j) {\n        return (\n          // <td onClick={() => {checkCell(i, j); findMine(i, j)}} className={classes.itemCell} key={j}> {element.isMine ? <FontAwesomeIcon icon={faBomb} /> : (element.isOpen && element.amountOfMines === 0) ? '' : element.amountOfMines} </td>\n          // <td onClick={() => {checkCell(i, j); findMine(i, j)}} className={`${element.isBlownUp && classes.blownUpBackground} ${element.isOpen && !element.isMine && element.amountOfMines === 0 && classes.emptyOpened} ${classes.itemCell}`} key={j}> {element.isMine && isGameOver ? <FontAwesomeIcon icon={faBomb} /> : (element.isOpen && !element.isMine && element.amountOfMines > 0 && element.amountOfMines) } </td>\n          <td onClick={() => {\n            sendAction(i, j)\n          }}\n              className={` ${element.isBlownUp && classes.blownUpBackground} ${element.isOpen && !element.isMine && element.amountOfMines !== 0 && classes[`background` + colorsArray[element.userId % 10]]} ${element.isOpen && !element.isMine && element.amountOfMines === 0 && classes[`background` + colorsArray[element.userId % 10]]} ${classes.itemCell}`}\n              key={j}> {element.isMine && element.isBlownUp ? <FontAwesomeIcon\n            icon={faBomb}/> : (element.isOpen && !element.isMine && element.amountOfMines > 0 && element.amountOfMines)} </td>\n        );\n      });\n      return (\n        <tr key={i}> {entry} </tr>\n      );\n    });\n    console.log(\"usersReadiness\", this.props.usersReadiness)\n    console.log(\"usersInGame\", this.props.gameOwner)\n    console.log(\"usersInRoom\", this.props.usersInRoom)\n    console.log(\"informationGame\", this.props.informationGame)\n\n    let maxPlayers = this.props.gamesList.filter(item => {\n      return item.gameid === this.props.match.params.gameId\n    })\n\n    console.log(\"maxPlayers\", maxPlayers)\n    let isStarting = this.props.usersReadiness.find(item => {\n      return !item.isReady\n    })\n    console.log(\"isStarting\", isStarting)\n    let whoMove = this.props.usersReadiness.find(item => {\n      return item.movePosition\n    })\n    return (\n      <div className={classes.wrapMain}>\n        <div className={classes.itemBlockLeft}>\n          {/*<div onClick={() => {drawingMap(tableTwoDimensional)}}>DRAWING MAP</div>*/}\n          {this.props.isGameOver && <div>GAME OVER</div>}\n          {this.props.win && <div>YOU ARE WINNER</div>}\n          <table>\n            {rows}\n          </table>\n          {!this.props.surrendered && this.props.informationGame.isplaying && <div onClick={() => {\n            this.onSurrender()\n          }}>Surrender</div>}\n          <div>list players:\n            {/*<div>owner: {this.props.gameOwner && this.props.gameOwner.username}</div>*/}\n            {\n              this.props.usersReadiness.map(item => {\n                return <div\n                  className={`${item.isReady && classes.activeUser} ${item.movePosition && classes.activeMove}`}>{item.username}</div>\n              })}</div>\n\n          {this.props.listViewers.length > 0 &&\n          <div>list viewers: {this.props.listViewers.map(item => item.username)} </div>}\n          {maxPlayers[0] &&\n          <div>Players: {this.props.usersInRoom[this.props.match.params.gameId]}/{maxPlayers[0].maxplayers}</div>}\n          {this.props.informationGame.isplaying || this.props.surrendered ? '' : (this.props.gameOwner && this.props.gameOwner.username !== JSON.parse(localStorage.getItem('user')).userName) ? !this.props.isReady ?\n            <div onClick={() => {\n              this.onReady()\n            }}>Ready</div> : <div onClick={() => {\n              this.onNotReady()\n            }}>Not ready</div> : ''}\n          {!this.props.informationGame.isplaying && !isStarting ? (maxPlayers[0] && maxPlayers[0].owner == JSON.parse(localStorage.getItem('user')).userId) &&\n            <div onClick={() => {\n              this.startGame()\n            }}>START GAME</div> : ''}\n          <div onClick={() => {\n            this.onExitFromGame()\n          }}>Exit from game\n          </div>\n        </div>\n        <div className={classes.itemBlockRight}>\n          {this.props.listLogs.map(item => {\n            return <div onClick={() => {\n              this.onShowHistory(item.history)\n            }} className={classes.itemHistory}>{item.username} i: {item.history.i};\n              j: {item.history.j} value: {item.amountofmines}</div>\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  gameInfo: state.gamePage.gameInfo,\n  tableTwoDimensional: state.gamePage.tableTwoDimensional,\n  isGameOver: state.gamePage.isGameOver,\n  socket: state.socketPage.socket,\n  gamesList: state.gamePage.gamesList,\n  usersInRoom: state.gamePage.usersInRoom,\n  usersInGame: state.gamePage.usersInGame,\n  usersReadiness: state.gamePage.usersReadiness,\n  gameOwner: state.gamePage.gameOwner,\n  win: state.gamePage.win,\n  informationGame: state.gamePage.informationGame,\n  surrendered: state.gamePage.surrendered,\n  listViewers: state.gamePage.listViewers,\n  listLogs: state.gamePage.listLogs,\n  isReady: state.gamePage.isReady,\n})\n\nexport default withRouter(connect(mapStateToProps, {\n  checkCell, findMine, getInfoGame\n})(Game));\n"]},"metadata":{},"sourceType":"module"}