{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{historyApi}from\"../../api/api\";var SET_SOCKET='SET_SOCKET';var SET_USERS_TO_ROOM='SET_USERS_TO_ROOM';var SET_ROOMS='SET_ROOMS';var SET_IN_ROOM='SET_IN_ROOM';var SET_ID_ROOM='SET_ID_ROOM';var SET_ROOM_HISTORY='SET_ROOM_HISTORY';var UPDATE_MESSAGE='UPDATE_MESSAGE';var RESET_ROOM_HISTORY='RESET_ROOM_HISTORY';var SET_IS_MOUNTED='SET_IS_MOUNTED';var SET_IS_SOCKET='SET_IS_SOCKET';var SET_IS_CONNECTED='SET_IS_CONNECTED';var SET_IS_DISCONNECTED='SET_IS_DISCONNECTED';var SET_IS_RENDER='SET_IS_RENDER';var initialState={socket:null,users:[],rooms:[],inRoom:null,idRoom:null,roomHistory:[],isMounted:false,isOneRendered:false,isSocketExist:false,isConnected:false,isDisconnected:false,isRender:false};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_SOCKET:// console.log(\"SOCKET_ID_ACTION\", action.socket.id)\nreturn _objectSpread(_objectSpread({},state),{},{socket:action.socket});case SET_IS_RENDER:// console.log(\"SOCKET_ID_ACTION\", action.socket.id)\nreturn _objectSpread(_objectSpread({},state),{},{isRender:action.isRender});case SET_IS_SOCKET:return _objectSpread(_objectSpread({},state),{},{isSocketExist:action.isSocketExist});case SET_IS_DISCONNECTED:alert(action.isDisconnected);return _objectSpread(_objectSpread({},state),{},{isDisconnected:action.isDisconnected});case SET_IS_CONNECTED:return _objectSpread(_objectSpread({},state),{},{isConnected:true});case SET_IS_MOUNTED:return _objectSpread(_objectSpread({},state),{},{isMounted:true,isOneRendered:false});case SET_ID_ROOM:return _objectSpread(_objectSpread({},state),{},{idRoom:action.idRoom});case RESET_ROOM_HISTORY:return _objectSpread(_objectSpread({},state),{},{roomHistory:[]});case UPDATE_MESSAGE:var clone=JSON.parse(JSON.stringify(state.roomHistory));var flag=false;console.log(\"clone\",clone);clone.forEach(function(item){var arrText=item.text.split(' ');console.log(\"arrText\",arrText);if(arrText[0]===action.userName&&arrText[1]==='joined'||arrText[1]&&arrText[1]===action.userName){flag=true;}});var lastRecord=clone[clone.length-1]&&clone[clone.length-1].text.split(' ');if(!action.message&&state.roomHistory.length>=0&&!flag||clone.length===0||lastRecord[2]&&lastRecord[2]==='left'&&lastRecord[1]===action.userName){console.log(\"cloneclone\",clone);clone.push({name:'admin',text:\"Welcome, \".concat(action.userName)});return _objectSpread(_objectSpread({},state),{},{roomHistory:clone});}else if(!action.message){return state;}clone.push(action.message);console.log(\"action.message\",action.message);console.log(\"clone\",clone);// console.log(\"roomHistory\", state.roomHistory);\n// let clone;\n// if (!action.message.text && state.roomHistory.length === 0) {\n//   clone = JSON.parse(JSON.stringify(state.roomHistory));\n//   action.message.text = `Welcome, ${action.userName}`\n//   clone.push(action.message);\n// } else if (!action.message.text && state.roomHistory.length !== 0) {\n//   return state\n// } else {\n//   clone = JSON.parse(JSON.stringify(state.roomHistory));\n//   clone.push(action.message);\n// }\nreturn _objectSpread(_objectSpread({},state),{},{roomHistory:clone});case SET_ROOMS:return _objectSpread(_objectSpread({},state),{},{rooms:action.rooms});case SET_ROOM_HISTORY:console.log(\"ACTION, ACTION\",action.roomId);console.log(\"ACTION, ACTION\",state.idRoom);if(state.idRoom&&state.idRoom!==action.roomId)return _objectSpread({},state);console.log(\"ACTION, ACTION\",action);console.log(\"ACTION_HISTORY\",action.history);console.log(\"STATE\",state.roomHistory);// if(!action.message) {\n//   actio.push({name: 'Admin', text: `Welcome, ${action.userName}`})\n// }\nif(action.history.length===1){return state;}var wordsLastHistory=action.history[action.history.length-1].text.split(' ');if(wordsLastHistory[1]&&wordsLastHistory[1]==='joined'&&wordsLastHistory[0]===\"\".concat(action.userName)){action.history.pop();}console.log(\"[wordsLastHistory]\",wordsLastHistory);// if (state.roomHistory.length === 0) return state;\n// let roomHistoryClone = JSON.parse(JSON.stringify(state.roomHistory));\n// let wordsUserName = action.history.map(item => item.text.split(' '))\n// console.log(\"ACTION_HISTORY\", action.history);\n// let newHistory = action.history.filter((item, index) => {\n//   return (!(wordsUserName[index][1] && wordsUserName[index][1] === action.userName && wordsUserName[index][2] === 'joined')) && !(wordsUserName[index][0] === 'Welcome,' && wordsUserName[index][1] !== action.userName)\n// })\n// let wordsNewHistory = newHistory.map(item => item.text.split(' '));\n// let modifiedHistory = newHistory.map((item, index) => {\n//   if ((wordsNewHistory[index][0] === 'User' && wordsNewHistory[index][1] === action.userName && wordsNewHistory[index][2] && wordsNewHistory[index][2] === 'left')) {\n//     item.text = 'You are left';\n//   } else if ((wordsNewHistory[index][0] === 'Welcome,' && wordsNewHistory[index][1] === action.userName)) {\n//     item.text = 'You are joined';\n//   }\n//   return item\n// })\n// console.log(\"modifiedHistory\", modifiedHistory);\n// let wordMidified = modifiedHistory.map(item => item.text.split(' '))\n// modifiedHistory.length > 0 && wordMidified[wordMidified.length - 1][0] === 'You' && modifiedHistory.splice(-1, 1);\n// historySortByCreatedDate(action.history);\nreturn _objectSpread(_objectSpread({},state),{},{roomHistory:action.history,isOneRendered:true});case SET_IN_ROOM:return _objectSpread(_objectSpread({},state),{},{inRoom:action.inRoom});case SET_USERS_TO_ROOM:return _objectSpread(_objectSpread(_objectSpread({},state),state.users),{},{users:action.users});default:return state;}};export var setSocket=function setSocket(socket){return{type:SET_SOCKET,socket:socket};};export var setIsRender=function setIsRender(isRender){return{type:SET_IS_RENDER,isRender:isRender};};export var setIsSocket=function setIsSocket(isSocketExist){return{type:SET_IS_SOCKET,isSocketExist:isSocketExist};};export var setUsersToRoom=function setUsersToRoom(users){return{type:SET_USERS_TO_ROOM,users:users};};export var setIsConnected=function setIsConnected(){return{type:SET_IS_CONNECTED};};export var setIsDisconnected=function setIsDisconnected(isDisconnected){return{type:SET_IS_DISCONNECTED,isDisconnected:isDisconnected};};export var setIsMounted=function setIsMounted(){return{type:SET_IS_MOUNTED};};export var setRooms=function setRooms(rooms){return{type:SET_ROOMS,rooms:rooms};};export var setInRoom=function setInRoom(inRoom){return{type:SET_IN_ROOM,inRoom:inRoom};};export var setIdRoom=function setIdRoom(idRoom){return{type:SET_ID_ROOM,idRoom:idRoom};};export var setRoomHistory=function setRoomHistory(history,userName,roomId){return{type:SET_ROOM_HISTORY,history:history,userName:userName,roomId:roomId};};export var updateMessage=function updateMessage(message,userName){return{type:UPDATE_MESSAGE,message:message,userName:userName};};export var resetRoomHistory=function resetRoomHistory(){return{type:RESET_ROOM_HISTORY};};export var getRoomHistory=function getRoomHistory(roomId,userName){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,modifiedResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return historyApi.getRoomHistory(roomId);case 3:response=_context.sent;modifiedResponse=response.data.map(function(item){var obj=_objectSpread({},item.history);obj.createdat=item.createdat;return obj;});console.log('[HISTORY]',response);dispatch(setRoomHistory(modifiedResponse,userName,response.data[0].roomid));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/src/redux/reducers/socketReducer.js"],"names":["historyApi","SET_SOCKET","SET_USERS_TO_ROOM","SET_ROOMS","SET_IN_ROOM","SET_ID_ROOM","SET_ROOM_HISTORY","UPDATE_MESSAGE","RESET_ROOM_HISTORY","SET_IS_MOUNTED","SET_IS_SOCKET","SET_IS_CONNECTED","SET_IS_DISCONNECTED","SET_IS_RENDER","initialState","socket","users","rooms","inRoom","idRoom","roomHistory","isMounted","isOneRendered","isSocketExist","isConnected","isDisconnected","isRender","authReducer","state","action","type","alert","clone","JSON","parse","stringify","flag","console","log","forEach","item","arrText","text","split","userName","lastRecord","length","message","push","name","roomId","history","wordsLastHistory","pop","setSocket","setIsRender","setIsSocket","setUsersToRoom","setIsConnected","setIsDisconnected","setIsMounted","setRooms","setInRoom","setIdRoom","setRoomHistory","updateMessage","resetRoomHistory","getRoomHistory","dispatch","response","modifiedResponse","data","map","obj","createdat","roomid"],"mappings":"olBAAA,OAAQA,UAAR,KAAyB,eAAzB,CACA,GAAMC,CAAAA,UAAU,CAAG,YAAnB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CACA,GAAMC,CAAAA,SAAS,CAAG,WAAlB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CACA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACjBC,MAAM,CAAE,IADS,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,KAAK,CAAE,EAHU,CAIjBC,MAAM,CAAE,IAJS,CAKjBC,MAAM,CAAE,IALS,CAMjBC,WAAW,CAAE,EANI,CAOjBC,SAAS,CAAE,KAPM,CAQjBC,aAAa,CAAE,KARE,CASjBC,aAAa,CAAE,KATE,CAUjBC,WAAW,CAAE,KAVI,CAWjBC,cAAc,CAAE,KAXC,CAYjBC,QAAQ,CAAE,KAZO,CAAnB,CAeA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBd,YAAyB,IAAXe,CAAAA,MAAW,2CACpD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK7B,CAAAA,UAAL,CACE;AACA,sCACK2B,KADL,MAEEb,MAAM,CAAEc,MAAM,CAACd,MAFjB,GAKA,IAAKF,CAAAA,aAAL,CACA;AACA,sCACKe,KADL,MAEEF,QAAQ,CAAEG,MAAM,CAACH,QAFnB,GAIA,IAAKhB,CAAAA,aAAL,CACA,sCACKkB,KADL,MAEEL,aAAa,CAAEM,MAAM,CAACN,aAFxB,GAIA,IAAKX,CAAAA,mBAAL,CACEmB,KAAK,CAAEF,MAAM,CAACJ,cAAT,CAAL,CACF,sCACKG,KADL,MAEEH,cAAc,CAAEI,MAAM,CAACJ,cAFzB,GAIA,IAAKd,CAAAA,gBAAL,CACA,sCACKiB,KADL,MAEEJ,WAAW,CAAE,IAFf,GAIF,IAAKf,CAAAA,cAAL,CACE,sCACKmB,KADL,MAEEP,SAAS,CAAE,IAFb,CAGEC,aAAa,CAAE,KAHjB,GAKF,IAAKjB,CAAAA,WAAL,CACE,sCACKuB,KADL,MAEET,MAAM,CAAEU,MAAM,CAACV,MAFjB,GAIF,IAAKX,CAAAA,kBAAL,CACE,sCACKoB,KADL,MAEER,WAAW,CAAE,EAFf,GAIF,IAAKb,CAAAA,cAAL,CACC,GAAIyB,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,KAAK,CAACR,WAArB,CAAX,CAAZ,CACA,GAAIgB,CAAAA,IAAI,CAAG,KAAX,CACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBN,KAArB,EACCA,KAAK,CAACO,OAAN,CAAc,SAAAC,IAAI,CAAI,CACpB,GAAIC,CAAAA,OAAO,CAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAd,CACAN,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBG,OAAvB,EACA,GAAIA,OAAO,CAAC,CAAD,CAAP,GAAeZ,MAAM,CAACe,QAAtB,EAAkCH,OAAO,CAAC,CAAD,CAAP,GAAe,QAAlD,EAAgEA,OAAO,CAAC,CAAD,CAAP,EAAcA,OAAO,CAAC,CAAD,CAAP,GAAeZ,MAAM,CAACe,QAAvG,CAAmH,CACjHR,IAAI,CAAG,IAAP,CACD,CACF,CAND,EAOA,GAAIS,CAAAA,UAAU,CAAGb,KAAK,CAACA,KAAK,CAACc,MAAN,CAAe,CAAhB,CAAL,EAA2Bd,KAAK,CAACA,KAAK,CAACc,MAAN,CAAe,CAAhB,CAAL,CAAwBJ,IAAxB,CAA6BC,KAA7B,CAAmC,GAAnC,CAA5C,CAEA,GAAG,CAACd,MAAM,CAACkB,OAAR,EAAqBnB,KAAK,CAACR,WAAN,CAAkB0B,MAAlB,EAA4B,CAA7B,EAAmC,CAACV,IAAxD,EAAiEJ,KAAK,CAACc,MAAN,GAAiB,CAAlF,EAAwFD,UAAU,CAAC,CAAD,CAAV,EAAiBA,UAAU,CAAC,CAAD,CAAV,GAAkB,MAAnC,EAA6CA,UAAU,CAAC,CAAD,CAAV,GAAkBhB,MAAM,CAACe,QAAjK,CAA4K,CAC1KP,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BN,KAA1B,EACAA,KAAK,CAACgB,IAAN,CAAW,CAACC,IAAI,CAAE,OAAP,CAAgBP,IAAI,oBAAcb,MAAM,CAACe,QAArB,CAApB,CAAX,EACA,sCACKhB,KADL,MAEER,WAAW,CAAEY,KAFf,GAID,CAPD,IAQK,IAAG,CAACH,MAAM,CAACkB,OAAX,CAAoB,CACvB,MAAOnB,CAAAA,KAAP,CACD,CACDI,KAAK,CAACgB,IAAN,CAAWnB,MAAM,CAACkB,OAAlB,EACAV,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BT,MAAM,CAACkB,OAArC,EACAV,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBN,KAArB,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCACKJ,KADL,MAEER,WAAW,CAAEY,KAFf,GAIF,IAAK7B,CAAAA,SAAL,CACE,sCACKyB,KADL,MAEEX,KAAK,CAAEY,MAAM,CAACZ,KAFhB,GAKF,IAAKX,CAAAA,gBAAL,CACE+B,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BT,MAAM,CAACqB,MAArC,EACAb,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BV,KAAK,CAACT,MAApC,EACA,GAAGS,KAAK,CAACT,MAAN,EAAgBS,KAAK,CAACT,MAAN,GAAiBU,MAAM,CAACqB,MAA3C,CAAmD,wBAAWtB,KAAX,EACnDS,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BT,MAA9B,EACAQ,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BT,MAAM,CAACsB,OAArC,EACAd,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBV,KAAK,CAACR,WAA3B,EACA;AACA;AACA;AACA,GAAGS,MAAM,CAACsB,OAAP,CAAeL,MAAf,GAA0B,CAA7B,CAAgC,CACtC,MAAOlB,CAAAA,KAAP,CACO,CAED,GAAIwB,CAAAA,gBAAgB,CAAGvB,MAAM,CAACsB,OAAP,CAAetB,MAAM,CAACsB,OAAP,CAAeL,MAAf,CAAsB,CAArC,EAAwCJ,IAAxC,CAA6CC,KAA7C,CAAmD,GAAnD,CAAvB,CACA,GAAGS,gBAAgB,CAAC,CAAD,CAAhB,EAAuBA,gBAAgB,CAAC,CAAD,CAAhB,GAAwB,QAA/C,EAA2DA,gBAAgB,CAAC,CAAD,CAAhB,aAA2BvB,MAAM,CAACe,QAAlC,CAA9D,CAA4G,CAC1Gf,MAAM,CAACsB,OAAP,CAAeE,GAAf,GACD,CACDhB,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCc,gBAAlC,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,sCACKxB,KADL,MAEER,WAAW,CAAES,MAAM,CAACsB,OAFtB,CAGE7B,aAAa,CAAE,IAHjB,GAKF,IAAKlB,CAAAA,WAAL,CACE,sCACKwB,KADL,MAEEV,MAAM,CAAEW,MAAM,CAACX,MAFjB,GAIF,IAAKhB,CAAAA,iBAAL,CACE,oDACK0B,KADL,EAEKA,KAAK,CAACZ,KAFX,MAGEA,KAAK,CAAEa,MAAM,CAACb,KAHhB,GAKF,QACE,MAAOY,CAAAA,KAAP,CA3JJ,CA6JD,CA9JD,CAgKA,MAAO,IAAM0B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACvC,MAAD,QAAa,CACpCe,IAAI,CAAE7B,UAD8B,CAEpCc,MAAM,CAANA,MAFoC,CAAb,EAAlB,CAKP,MAAO,IAAMwC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAC7B,QAAD,QAAe,CACxCI,IAAI,CAAEjB,aADkC,CAExCa,QAAQ,CAARA,QAFwC,CAAf,EAApB,CAKP,MAAO,IAAM8B,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACjC,aAAD,QAAoB,CAC7CO,IAAI,CAAEpB,aADuC,CAE7Ca,aAAa,CAAbA,aAF6C,CAApB,EAApB,CAKP,MAAO,IAAMkC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACzC,KAAD,QAAY,CACxCc,IAAI,CAAE5B,iBADkC,CAExCc,KAAK,CAALA,KAFwC,CAAZ,EAAvB,CAKP,MAAO,IAAM0C,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAO,CACnC5B,IAAI,CAAEnB,gBAD6B,CAAP,EAAvB,CAIP,MAAO,IAAMgD,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAClC,cAAD,QAAqB,CACpDK,IAAI,CAAElB,mBAD8C,CAEpDa,cAAc,CAAdA,cAFoD,CAArB,EAA1B,CAKP,MAAO,IAAMmC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAO,CACjC9B,IAAI,CAAErB,cAD2B,CAAP,EAArB,CAIP,MAAO,IAAMoD,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAC5C,KAAD,QAAY,CAClCa,IAAI,CAAE3B,SAD4B,CAElCc,KAAK,CAALA,KAFkC,CAAZ,EAAjB,CAKP,MAAO,IAAM6C,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAC5C,MAAD,QAAa,CACpCY,IAAI,CAAE1B,WAD8B,CAEpCc,MAAM,CAANA,MAFoC,CAAb,EAAlB,CAKP,MAAO,IAAM6C,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAC5C,MAAD,QAAa,CACpCW,IAAI,CAAEzB,WAD8B,CAEpCc,MAAM,CAANA,MAFoC,CAAb,EAAlB,CAKP,MAAO,IAAM6C,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACb,OAAD,CAAUP,QAAV,CAAoBM,MAApB,QAAgC,CAC5DpB,IAAI,CAAExB,gBADsD,CAE5D6C,OAAO,CAAPA,OAF4D,CAEnDP,QAAQ,CAARA,QAFmD,CAEzCM,MAAM,CAANA,MAFyC,CAAhC,EAAvB,CAKP,MAAO,IAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAClB,OAAD,CAAUH,QAAV,QAAwB,CACnDd,IAAI,CAAEvB,cAD6C,CAEnDwC,OAAO,CAAPA,OAFmD,CAE1CH,QAAQ,CAARA,QAF0C,CAAxB,EAAtB,CAKP,MAAO,IAAMsB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CACrCpC,IAAI,CAAEtB,kBAD+B,CAAP,EAAzB,CAIP,MAAO,IAAM2D,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACjB,MAAD,CAASN,QAAT,iGAAsB,iBAAOwB,QAAP,sLAE3BpE,CAAAA,UAAU,CAACmE,cAAX,CAA0BjB,MAA1B,CAF2B,QAE5CmB,QAF4C,eAG5CC,gBAH4C,CAGzBD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,SAAAhC,IAAI,CAAI,CAC/C,GAAIiC,CAAAA,GAAG,kBAAOjC,IAAI,CAACW,OAAZ,CAAP,CACAsB,GAAG,CAACC,SAAJ,CAAgBlC,IAAI,CAACkC,SAArB,CACA,MAAOD,CAAAA,GAAP,CACD,CAJsB,CAHyB,CAQhDpC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyB+B,QAAzB,EACAD,QAAQ,CAACJ,cAAc,CAACM,gBAAD,CAAmB1B,QAAnB,CAA6ByB,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBI,MAA9C,CAAf,CAAR,CATgD,+EAWhDtC,OAAO,CAACC,GAAR,cAXgD,oEAAtB,gEAAvB,CAgBP,cAAeX,CAAAA,WAAf","sourcesContent":["import {historyApi} from \"../../api/api\";\nconst SET_SOCKET = 'SET_SOCKET';\nconst SET_USERS_TO_ROOM = 'SET_USERS_TO_ROOM';\nconst SET_ROOMS = 'SET_ROOMS';\nconst SET_IN_ROOM = 'SET_IN_ROOM';\nconst SET_ID_ROOM = 'SET_ID_ROOM';\nconst SET_ROOM_HISTORY = 'SET_ROOM_HISTORY';\nconst UPDATE_MESSAGE = 'UPDATE_MESSAGE';\nconst RESET_ROOM_HISTORY = 'RESET_ROOM_HISTORY';\nconst SET_IS_MOUNTED = 'SET_IS_MOUNTED';\nconst SET_IS_SOCKET = 'SET_IS_SOCKET';\nconst SET_IS_CONNECTED = 'SET_IS_CONNECTED';\nconst SET_IS_DISCONNECTED = 'SET_IS_DISCONNECTED';\nconst SET_IS_RENDER = 'SET_IS_RENDER';\n\nlet initialState = {\n  socket: null,\n  users: [],\n  rooms: [],\n  inRoom: null,\n  idRoom: null,\n  roomHistory: [],\n  isMounted: false,\n  isOneRendered: false,\n  isSocketExist: false,\n  isConnected: false,\n  isDisconnected: false,\n  isRender: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SOCKET:\n      // console.log(\"SOCKET_ID_ACTION\", action.socket.id)\n      return {\n        ...state,\n        socket: action.socket\n      };\n\n      case SET_IS_RENDER:\n      // console.log(\"SOCKET_ID_ACTION\", action.socket.id)\n      return {\n        ...state,\n        isRender: action.isRender\n      };\n      case SET_IS_SOCKET:\n      return {\n        ...state,\n        isSocketExist: action.isSocketExist\n      };\n      case SET_IS_DISCONNECTED:\n        alert( action.isDisconnected)\n      return {\n        ...state,\n        isDisconnected: action.isDisconnected\n      };\n      case SET_IS_CONNECTED:\n      return {\n        ...state,\n        isConnected: true\n      };\n    case SET_IS_MOUNTED:\n      return {\n        ...state,\n        isMounted: true,\n        isOneRendered: false\n      };\n    case SET_ID_ROOM:\n      return {\n        ...state,\n        idRoom: action.idRoom\n      };\n    case RESET_ROOM_HISTORY:\n      return {\n        ...state,\n        roomHistory: []\n      };\n    case UPDATE_MESSAGE:\n     let clone = JSON.parse(JSON.stringify(state.roomHistory));\n     let flag = false;\n     console.log(\"clone\", clone)\n      clone.forEach(item => {\n        let arrText = item.text.split(' ');\n        console.log(\"arrText\", arrText)\n        if((arrText[0] === action.userName && arrText[1] === 'joined') || (arrText[1] && arrText[1] === action.userName) ) {\n          flag = true;\n        }\n      })\n      let lastRecord = clone[clone.length - 1] && clone[clone.length - 1].text.split(' ');\n\n      if(!action.message && ((state.roomHistory.length >= 0) && !flag) || clone.length === 0 || (lastRecord[2] && lastRecord[2] === 'left' && lastRecord[1] === action.userName)) {\n        console.log(\"cloneclone\", clone);\n        clone.push({name: 'admin', text: `Welcome, ${action.userName}`})\n        return {\n          ...state,\n          roomHistory: clone\n        };\n      }\n      else if(!action.message ){\n        return state;\n      }\n      clone.push(action.message);\n      console.log(\"action.message\", action.message)\n      console.log(\"clone\", clone)\n\n\n\n      // console.log(\"roomHistory\", state.roomHistory);\n      // let clone;\n      // if (!action.message.text && state.roomHistory.length === 0) {\n      //   clone = JSON.parse(JSON.stringify(state.roomHistory));\n      //   action.message.text = `Welcome, ${action.userName}`\n      //   clone.push(action.message);\n      // } else if (!action.message.text && state.roomHistory.length !== 0) {\n      //   return state\n      // } else {\n      //   clone = JSON.parse(JSON.stringify(state.roomHistory));\n      //   clone.push(action.message);\n      // }\n      return {\n        ...state,\n        roomHistory: clone\n      };\n    case SET_ROOMS:\n      return {\n        ...state,\n        rooms: action.rooms\n      };\n\n    case SET_ROOM_HISTORY:\n      console.log(\"ACTION, ACTION\", action.roomId);\n      console.log(\"ACTION, ACTION\", state.idRoom);\n      if(state.idRoom && state.idRoom !== action.roomId) return {...state}\n      console.log(\"ACTION, ACTION\", action);\n      console.log(\"ACTION_HISTORY\", action.history);\n      console.log(\"STATE\", state.roomHistory);\n      // if(!action.message) {\n      //   actio.push({name: 'Admin', text: `Welcome, ${action.userName}`})\n      // }\n      if(action.history.length === 1) {\nreturn state;\n      }\n\n      let wordsLastHistory = action.history[action.history.length-1].text.split(' ');\n      if(wordsLastHistory[1] && wordsLastHistory[1] === 'joined' && wordsLastHistory[0] === `${action.userName}`) {\n        action.history.pop();\n      }\n      console.log(\"[wordsLastHistory]\", wordsLastHistory)\n      // if (state.roomHistory.length === 0) return state;\n      // let roomHistoryClone = JSON.parse(JSON.stringify(state.roomHistory));\n      // let wordsUserName = action.history.map(item => item.text.split(' '))\n      // console.log(\"ACTION_HISTORY\", action.history);\n      // let newHistory = action.history.filter((item, index) => {\n      //   return (!(wordsUserName[index][1] && wordsUserName[index][1] === action.userName && wordsUserName[index][2] === 'joined')) && !(wordsUserName[index][0] === 'Welcome,' && wordsUserName[index][1] !== action.userName)\n      // })\n      // let wordsNewHistory = newHistory.map(item => item.text.split(' '));\n      // let modifiedHistory = newHistory.map((item, index) => {\n      //   if ((wordsNewHistory[index][0] === 'User' && wordsNewHistory[index][1] === action.userName && wordsNewHistory[index][2] && wordsNewHistory[index][2] === 'left')) {\n      //     item.text = 'You are left';\n      //   } else if ((wordsNewHistory[index][0] === 'Welcome,' && wordsNewHistory[index][1] === action.userName)) {\n      //     item.text = 'You are joined';\n      //   }\n      //   return item\n      // })\n      // console.log(\"modifiedHistory\", modifiedHistory);\n      // let wordMidified = modifiedHistory.map(item => item.text.split(' '))\n      // modifiedHistory.length > 0 && wordMidified[wordMidified.length - 1][0] === 'You' && modifiedHistory.splice(-1, 1);\n\n      // historySortByCreatedDate(action.history);\n      return {\n        ...state,\n        roomHistory: action.history,\n        isOneRendered: true\n      };\n    case SET_IN_ROOM:\n      return {\n        ...state,\n        inRoom: action.inRoom\n      };\n    case SET_USERS_TO_ROOM:\n      return {\n        ...state,\n        ...state.users,\n        users: action.users\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSocket = (socket) => ({\n  type: SET_SOCKET,\n  socket\n});\n\nexport const setIsRender = (isRender) => ({\n  type: SET_IS_RENDER,\n  isRender\n});\n\nexport const setIsSocket = (isSocketExist) => ({\n  type: SET_IS_SOCKET,\n  isSocketExist\n});\n\nexport const setUsersToRoom = (users) => ({\n  type: SET_USERS_TO_ROOM,\n  users\n});\n\nexport const setIsConnected = () => ({\n  type: SET_IS_CONNECTED,\n});\n\nexport const setIsDisconnected = (isDisconnected) => ({\n  type: SET_IS_DISCONNECTED,\n  isDisconnected\n});\n\nexport const setIsMounted = () => ({\n  type: SET_IS_MOUNTED,\n});\n\nexport const setRooms = (rooms) => ({\n  type: SET_ROOMS,\n  rooms\n})\n\nexport const setInRoom = (inRoom) => ({\n  type: SET_IN_ROOM,\n  inRoom\n})\n\nexport const setIdRoom = (idRoom) => ({\n  type: SET_ID_ROOM,\n  idRoom\n});\n\nexport const setRoomHistory = (history, userName, roomId) => ({\n  type: SET_ROOM_HISTORY,\n  history, userName, roomId\n});\n\nexport const updateMessage = (message, userName) => ({\n  type: UPDATE_MESSAGE,\n  message, userName\n});\n\nexport const resetRoomHistory = () => ({\n  type: RESET_ROOM_HISTORY,\n});\n\nexport const getRoomHistory = (roomId, userName) => async (dispatch) => {\n  try {\n    let response = await historyApi.getRoomHistory(roomId);\n    let modifiedResponse = response.data.map(item => {\n      let obj = {...item.history};\n      obj.createdat = item.createdat;\n      return obj;\n    });\n    console.log('[HISTORY]', response)\n    dispatch(setRoomHistory(modifiedResponse, userName, response.data[0].roomid))\n  } catch (err) {\n    console.log(err);\n  }\n\n};\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}