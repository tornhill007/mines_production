{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from\"../../api/api\";import{reset}from\"redux-form\";var SET_AUTH_USER_DATA='SET_AUTH_USER_DATA';var SET_IS_CONNECTED='SET_IS_CONNECTED';var initialState={userId:null,userName:null,token:null,isConnected:false};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_AUTH_USER_DATA:return _objectSpread(_objectSpread({},state),action.data);case SET_IS_CONNECTED:return _objectSpread(_objectSpread({},state),{},{isConnected:true});default:return state;}};export var setAuthUserData=function setAuthUserData(userId,userName,token){return{type:SET_AUTH_USER_DATA,data:{userId:userId,userName:userName,token:token}};};export var setIsConnected=function setIsConnected(){return{type:SET_IS_CONNECTED};};export var login=function login(password,userName){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,_response$data,userId,_userName,token,user,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return authAPI.login(password,userName);case 3:response=_context.sent;console.log(response);if(response.statusText==='OK'){dispatch(reset('register'));_response$data=response.data,userId=_response$data.userId,_userName=_response$data.userName,token=_response$data.token;dispatch(setAuthUserData(userId,_userName,token));user={userId:userId,userName:_userName,token:token,timestamp:Date.now()};console.log(1);window.localStorage.setItem(\"user\",JSON.stringify(user));}else{message=response.data.messages.length>0?response.data.messages[0]:\"Some error\";// alert(message)\n}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);// alert(err.response.data.message)\nconsole.log(\"err\",_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var register=function register(password,userName,repeatPassword){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(password===repeatPassword)){_context2.next=8;break;}_context2.next=4;return authAPI.register(password,userName);case 4:response=_context2.sent;if(response.statusText==='OK'){dispatch(reset('register'));alert('you have registered');}else{message=response.data.messages.length>0?response.data.messages[0]:\"Some error\";alert(message);}_context2.next=9;break;case 8:alert(\"Password mismatch\");case 9:_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);alert(_context2.t0.response.data.message);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["/home/user/WebstormProjects/mines-test/minesweeper-multiplayer/minesweeper-client/src/redux/reducers/authReducer.js"],"names":["authAPI","reset","SET_AUTH_USER_DATA","SET_IS_CONNECTED","initialState","userId","userName","token","isConnected","authReducer","state","action","type","data","setAuthUserData","setIsConnected","login","password","dispatch","response","console","log","statusText","user","timestamp","Date","now","window","localStorage","setItem","JSON","stringify","message","messages","length","register","repeatPassword","alert"],"mappings":"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","sourcesContent":["import {authAPI} from \"../../api/api\";\nimport {reset} from \"redux-form\";\n\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nconst SET_IS_CONNECTED = 'SET_IS_CONNECTED';\n\nlet initialState = {\n    userId: null,\n    userName: null,\n    token: null,\n    isConnected: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.data\n            };\n\n            case SET_IS_CONNECTED:\n            return {\n                ...state,\n               isConnected: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, userName, token) => ({\n    type: SET_AUTH_USER_DATA,\n    data: {userId, userName, token}\n});\n\nexport const setIsConnected = () => ({\n    type: SET_IS_CONNECTED\n});\n\n\nexport const login = (password, userName) => async (dispatch) => {\n    try {\n        let response = await authAPI.login(password, userName);\n        console.log(response);\n        if (response.statusText === 'OK') {\n            dispatch(reset('register'))\n            let {userId, userName, token} = response.data;\n            dispatch(setAuthUserData(userId, userName, token));\n            let user = {\n                userId,\n                userName,\n                token,\n                timestamp: Date.now()\n            }\n            console.log(1)\n            window.localStorage.setItem(\"user\", JSON.stringify(user))\n\n        }\n        else {\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n            // alert(message)\n        }\n    }\n    catch (err) {\n        // alert(err.response.data.message)\n        console.log(\"err\", err);\n    }\n\n};\n\nexport const register = (password, userName, repeatPassword) => async (dispatch) => {\n    try {\n        if(password === repeatPassword) {\n            let response = await authAPI.register(password, userName);\n            if (response.statusText === 'OK') {\n                dispatch(reset('register'))\n                alert('you have registered')\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                alert(message);\n            }\n        }\n        else {\n            alert(\"Password mismatch\")\n        }\n\n    } catch (err) {\n        alert(err.response.data.message);\n    }\n\n};\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}